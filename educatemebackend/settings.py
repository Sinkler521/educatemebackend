"""
Django settings for educatemebackend project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-z()jb^)=&b78r_-7wrafbn3lh96+udb)dhd3s8$t&=!#lz7(x@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


# Application definition

INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api.apps.ApiConfig',
    'userauth.apps.UserauthConfig',
    'rest_framework'
]

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
    ],
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # "django.middleware.common.CommonMiddleware",
]

ROOT_URLCONF = 'educatemebackend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'educatemebackend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DEFAULT_AVATAR_BASE64 = '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'


CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
]

CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    'xtoken',
]
CSRF_TRUSTED_ORIGINS = ['http://localhost:3000', 'http://127.0.0.1:3000']

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_USE_TLS = True
EMAIL_HOST = os.environ.get('EMAIL_HOST')
EMAIL_PORT = os.environ.get('EMAIL_PORT')
EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_HOST_PASSWORD")

ADMIN_EMAIL = os.environ.get('ADMIN_EMAIL')

APPEND_SLASH = False
